blueprint:
  name: Sonoff R5 Button Controller
  description: |
    Control multiple lights and switches using the Sonoff R5 buttons.
    - Each button has 3 actions: Single press, Double press, and Hold press.
    - Assign different devices or services to each action.
    - Requires the "Sonoff LAN" HACS integration in auto mode (local-only mode will not work).  
      (More info: https://github.com/AlexxIT/SonoffLAN)
  domain: automation
  author: Modified by KamilKara (original by Erick Rodriguez)
  input:
    sonoff_sensor:
      name: Sonoff R5 Sensor
      description: "Select the Sonoff R5 sensor entity (filtered for Sonoff R5 only)"
      selector:
        entity:
          domain: sensor
          integration: sonoff

    # Button 1
    button_1_single:
      name: Button 1 - Single Press Action
      default: []
      selector:
        action: {}

    button_1_double:
      name: Button 1 - Double Press Action
      default: []
      selector:
        action: {}

    button_1_hold:
      name: Button 1 - Hold Press Action
      default: []
      selector:
        action: {}

    # Button 2
    button_2_single:
      name: Button 2 - Single Press Action
      default: []
      selector:
        action: {}

    button_2_double:
      name: Button 2 - Double Press Action
      default: []
      selector:
        action: {}

    button_2_hold:
      name: Button 2 - Hold Press Action
      default: []
      selector:
        action: {}

    # Button 3
    button_3_single:
      name: Button 3 - Single Press Action
      default: []
      selector:
        action: {}

    button_3_double:
      name: Button 3 - Double Press Action
      default: []
      selector:
        action: {}

    button_3_hold:
      name: Button 3 - Hold Press Action
      default: []
      selector:
        action: {}

    # Button 4
    button_4_single:
      name: Button 4 - Single Press Action
      default: []
      selector:
        action: {}

    button_4_double:
      name: Button 4 - Double Press Action
      default: []
      selector:
        action: {}

    button_4_hold:
      name: Button 4 - Hold Press Action
      default: []
      selector:
        action: {}

    # Button 5
    button_5_single:
      name: Button 5 - Single Press Action
      default: []
      selector:
        action: {}

    button_5_double:
      name: Button 5 - Double Press Action
      default: []
      selector:
        action: {}

    button_5_hold:
      name: Button 5 - Hold Press Action
      default: []
      selector:
        action: {}

    # Button 6
    button_6_single:
      name: Button 6 - Single Press Action
      default: []
      selector:
        action: {}

    button_6_double:
      name: Button 6 - Double Press Action
      default: []
      selector:
        action: {}

    button_6_hold:
      name: Button 6 - Hold Press Action
      default: []
      selector:
        action: {}

    # Automation Mode Selector
    automation_mode:
      name: Automation Mode
      description: "Select the execution mode for this automation"
      default: queued
      selector:
        select:
          options:
            - "single"
            - "queued"
            - "restart"
            - "parallel"

  source_url: "https://raw.githubusercontent.com/kamilkara/HA_blueprints/refs/heads/main/blueprints/automation/sonoff_r5/sonoff_r5.yaml"

mode: !input automation_mode  # Dynamically set mode from user input

trigger:
  - platform: state
    entity_id: !input sonoff_sensor
    to:
      - "button_1_single"
      - "button_1_double"
      - "button_1_hold"
      - "button_2_single"
      - "button_2_double"
      - "button_2_hold"
      - "button_3_single"
      - "button_3_double"
      - "button_3_hold"
      - "button_4_single"
      - "button_4_double"
      - "button_4_hold"
      - "button_5_single"
      - "button_5_double"
      - "button_5_hold"
      - "button_6_single"
      - "button_6_double"
      - "button_6_hold"

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_1_single"
        sequence: !input button_1_single

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_1_double"
        sequence: !input button_1_double

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_1_hold"
        sequence: !input button_1_hold

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_2_single"
        sequence: !input button_2_single

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_2_double"
        sequence: !input button_2_double

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_2_hold"
        sequence: !input button_2_hold

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_3_single"
        sequence: !input button_3_single

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_3_double"
        sequence: !input button_3_double

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_3_hold"
        sequence: !input button_3_hold

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_4_single"
        sequence: !input button_4_single

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_4_double"
        sequence: !input button_4_double

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_4_hold"
        sequence: !input button_4_hold

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_5_single"
        sequence: !input button_5_single

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_5_double"
        sequence: !input button_5_double

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_5_hold"
        sequence: !input button_5_hold

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_6_single"
        sequence: !input button_6_single

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_6_double"
        sequence: !input button_6_double

      - conditions:
          - condition: state
            entity_id: !input sonoff_sensor
            state: "button_6_hold"
        sequence: !input button_6_hold
